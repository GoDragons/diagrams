{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "API for an online collaboration tool used to build system design diagrams",
  "Parameters": {
    "ConnectionsTable": {
      "Type": "String",
      "Default": "diagrams_app_connections",
      "Description": "(Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters",
      "MinLength": 3,
      "MaxLength": 50,
      "AllowedPattern": "^[A-Za-z_]+$",
      "ConstraintDescription": "Required. Can be characters and underscore only. No numbers or special characters allowed."
    },
    "DiagramsTable": {
      "Type": "String",
      "Default": "diagrams_app_diagrams",
      "Description": "(Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters",
      "MinLength": 3,
      "MaxLength": 50,
      "AllowedPattern": "^[A-Za-z_]+$",
      "ConstraintDescription": "Required. Can be characters and underscore only. No numbers or special characters allowed."
    },
    "OpenDiagramsTable": {
      "Type": "String",
      "Default": "diagrams_app_open_diagrams",
      "Description": "(Required) The name of the new DynamoDB to store connection identifiers for each open diagram. Minimum 3 characters",
      "MinLength": 3,
      "MaxLength": 50,
      "AllowedPattern": "^[A-Za-z_]+$",
      "ConstraintDescription": "Required. Can be characters and underscore only. No numbers or special characters allowed."
    }
  },
  "Outputs": {
    "WebSocketApiId": {
      "Value": {
        "Ref": "Diagrams"
      }
    },
    "RESTSocketApiId": {
      "Value": {
        "Ref": "DiagramsREST"
      }
    }
  },
  "Resources": {
    "Diagrams": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "Diagrams",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.message"
      }
    },
    "WebsocketDeployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "JoinDiagramRoute",
        "SendChangeRoute",
        "DisconnectRoute",
        "ConnectRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        }
      }
    },
    "WebSocketProdStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "StageName": "Prod",
        "DeploymentId": {
          "Ref": "WebsocketDeployment"
        },
        "ApiId": {
          "Ref": "Diagrams"
        }
      }
    },
    "DiagramsREST": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "DiagramsREST",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "*"
          ],
          "AllowMethods": [
            "*"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "RESTDeployment": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "CreateDiagramRoute",
        "DeleteDiagramRoute",
        "GetDiagramsRoute",
        "SaveRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        }
      }
    },
    "RESTProdStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "StageName": "Prod",
        "DeploymentId": {
          "Ref": "RESTDeployment"
        },
        "ApiId": {
          "Ref": "DiagramsREST"
        }
      }
    },
    "ConnectionsDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH"
          }
        ],
        "SSESpecification": {
          "SSEEnabled": true
        },
        "TableName": {
          "Ref": "ConnectionsTable"
        }
      }
    },
    "DiagramsDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "diagramId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "diagramId",
            "KeyType": "HASH"
          }
        ],
        "SSESpecification": {
          "SSEEnabled": true
        },
        "TableName": {
          "Ref": "DiagramsTable"
        }
      }
    },
    "OpenDiagramsDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "diagramId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "connectionId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "diagramId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "connectionId",
            "KeyType": "RANGE"
          }
        ],
        "SSESpecification": {
          "SSEEnabled": true
        },
        "TableName": {
          "Ref": "OpenDiagramsTable"
        }
      }
    },
    "ManageConnectionsPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [
          {
            "Ref": "WebsocketLambdaFunctionRole"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "execute-api:ManageConnections"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:execute-api:*"
                }
              ]
            }
          ]
        },
        "PolicyName": "ManageConnectionsPolicy"
      }
    },
    "ManageDynamoDBDiagramTablesPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [
          {
            "Ref": "WebsocketLambdaFunctionRole"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:UpdateItem"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ConnectionsDBTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "DiagramsDBTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "OpenDiagramsDBTable",
                    "Arn"
                  ]
                }
              ]
            }
          ]
        },
        "PolicyName": "ManageDynamoDBDiagramTablesPolicy"
      }
    },
    "WebsocketLambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Description": "Manage connections",
        "RoleName": "WebsocketLambdaFunctionRole",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "CreateDiagramRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "AuthorizationType": "NONE",
        "OperationName": "CreateDiagramRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "CreateDiagramInteg"
              }
            ]
          ]
        },
        "RouteKey": "POST /create-diagram"
      }
    },
    "CreateDiagramInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "Description": "create diagram Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateDiagramFunction.Arn}/invocations"
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "CreateDiagramFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "CreateDiagram",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/rest/creatediagram"
      }
    },
    "CreateDiagramPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "DiagramsREST"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CreateDiagramFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DeleteDiagramRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "AuthorizationType": "NONE",
        "OperationName": "DeleteDiagramRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DeleteDiagramInteg"
              }
            ]
          ]
        },
        "RouteKey": "POST /delete-diagram"
      }
    },
    "DeleteDiagramInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "Description": "delete diagram Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteDiagramFunction.Arn}/invocations"
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "DeleteDiagramFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "DeleteDiagram",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/rest/deletediagram"
      }
    },
    "DeleteDiagramPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "DiagramsREST"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "DeleteDiagramFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "GetDiagramsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "AuthorizationType": "NONE",
        "OperationName": "GetDiagramsRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "GetDiagramsInteg"
              }
            ]
          ]
        },
        "RouteKey": "GET /get-diagrams"
      }
    },
    "GetDiagramsInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "Description": "get diagrams Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetDiagramsFunction.Arn}/invocations"
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "GetDiagramsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "GetDiagrams",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/rest/getdiagrams"
      }
    },
    "GetDiagramsPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "DiagramsREST"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "GetDiagramsFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SaveRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "AuthorizationType": "NONE",
        "OperationName": "SaveRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SaveInteg"
              }
            ]
          ]
        },
        "RouteKey": "GET /save"
      }
    },
    "SaveInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "DiagramsREST"
        },
        "Description": "save Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SaveFunction.Arn}/invocations"
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "SaveFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "Save",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/rest/save"
      }
    },
    "SavePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "DiagramsREST"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SaveFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "JoinDiagramRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "AuthorizationType": "NONE",
        "OperationName": "JoinDiagramRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "JoinDiagramInteg"
              }
            ]
          ]
        },
        "RouteKey": "joindiagram"
      }
    },
    "JoinDiagramInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "Description": "join diagram Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${JoinDiagramFunction.Arn}/invocations"
        }
      }
    },
    "JoinDiagramFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "JoinDiagram",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/websocket/joindiagram"
      }
    },
    "JoinDiagramPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "Diagrams"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "JoinDiagramFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SendChangeRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "AuthorizationType": "NONE",
        "OperationName": "SendChangeRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SendChangeInteg"
              }
            ]
          ]
        },
        "RouteKey": "sendchange"
      }
    },
    "SendChangeInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "Description": "send change Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendChangeFunction.Arn}/invocations"
        }
      }
    },
    "SendChangeFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "SendChange",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/websocket/sendchange"
      }
    },
    "SendChangePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "Diagrams"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SendChangeFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DisconnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "AuthorizationType": "NONE",
        "OperationName": "DisconnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectInteg"
              }
            ]
          ]
        },
        "RouteKey": "$disconnect"
      }
    },
    "DisconnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "Description": "disconnect Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DisconnectFunction.Arn}/invocations"
        }
      }
    },
    "DisconnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "Disconnect",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/websocket/disconnect"
      }
    },
    "DisconnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "Diagrams"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "DisconnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "ConnectRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "AuthorizationType": "NONE",
        "OperationName": "ConnectRoute",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectInteg"
              }
            ]
          ]
        },
        "RouteKey": "$connect"
      }
    },
    "ConnectInteg": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Diagrams"
        },
        "Description": "connect Integration",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConnectFunction.Arn}/invocations"
        }
      }
    },
    "ConnectFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "Connect",
        "Handler": "app.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Role": {
          "Fn::GetAtt": [
            "WebsocketLambdaFunctionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE_NAME": {
              "Ref": "ConnectionsTable"
            },
            "DIAGRAMS_TABLE_NAME": {
              "Ref": "DiagramsTable"
            },
            "OPEN_DIAGRAMS_TABLE_NAME": {
              "Ref": "OpenDiagramsTable"
            }
          }
        },
        "CodeUri": "lambda_functions/websocket/connect"
      }
    },
    "ConnectPermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "Diagrams"
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ConnectFunction"
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  }
}